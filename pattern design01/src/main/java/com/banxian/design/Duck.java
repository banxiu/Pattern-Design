package com.banxian.design;

/**
 * @program: Pattern-Design
 * @description: 鸭子类
 * @author: Wangly
 * @create: 2021-02-24 15:32
 * 设计原则
 * 一.找出应用中可能需要变化的地方，独立出来，不要和其他不变的代码混合到一起
 * 也就是将会变化的代码取出并封装起来，让其他部分不受影响
 * 实际：
 *       新需求
 *          -->代码变化
 *            --->需要抽取
 *              ---->区分变化的代码和不变的代码
 * 二.针对接口编程，而不是针对实现编程
 * 为什么不用抽象类实现飞行行为？
 * 针对接口编程真正的意思是 ‘’针对超类型编程‘’
 * 接口有多个含义：
 * 1.Interface构造
 * 可以在不涉及Java Interface的情况下 针对接口编程
 * 关键就在多态，利用多态
 * 根据实际情况执行真正的行为，不会固定在超类型的行为上
 * ‘’针对超类型编程‘’明确来说,变量的声明类型应该是超类型的，通常是一个抽象类是接口
 * 只要具体实现超类型的类产生的所有对象，都可以制定给这个变量
 * 声明类不用理会以后执行的真正对象类型
 * 例子
 @see com.banxian.design.demo.Animal
 */
public class Duck {
}